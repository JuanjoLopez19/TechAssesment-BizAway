services:
  assesment-app:
    build: ./assesment
    container_name: assesment-app
    restart: always
    ports:
      - ${APP_HOST_HTTP_PORT}:${APP_DOCKER_HTTP_PORT}
      - ${APP_HOST_HTTPS_PORT}:${APP_DOCKER_HTTPS_PORT}
    volumes:
      - ./docker/ssl:/app/certs
    env_file: ./docker/envs/app.env
    depends_on:
      - assesment-db
      - assesment-redis
    networks:
      - assesment-net
    command: >
      sh -c "yarn migrate:deploy && yarn start:prod"

  assesment-db:
    image: postgres:latest
    container_name: assesment-db
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PWD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - ${DB_HOST_PORT}:${DB_DOCKER_PORT}

    volumes:
      - assesment-db:/var/lib/postgresql/data
    networks:
      - assesment-net

  assesment-redis:
    image: redis:latest
    container_name: assesment-redis
    restart: always
    ports:
      - ${REDIS_HOST_PORT}:${REDIS_DOCKER_PORT}
    command: redis-server --requirepass ${REDIS_PWD}
    volumes:
      - assesment-redis:/data
    networks:
      - assesment-net

  assesment-commander:
    container_name: assesment-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    ports:
      - ${REDIS_COMMANDER_HOST_PORT}:${REDIS_COMMANDER_DOCKER_PORT}
    environment:
      - REDIS_HOSTS=${REDIS_COMMANDER_HOSTS}
      - HTTP_USER=${REDIS_COMMANDER_USER}
      - HTTP_PASSWORD=${REDIS_COMMANDER_PWD}
    networks:
      - assesment-net
    depends_on:
      - assesment-redis

networks:
  assesment-net:
    driver: bridge

volumes:
  assesment-db:
    name: assesment-db
    driver: local

  assesment-redis:
    name: assesment-redis
    driver: local
